(()=>{"use strict";const e=(()=>{let e=JSON.parse(localStorage.getItem("toDos"))||[];return{createTodo:(o,n,c,r)=>{let d={name:o,date:n,priority:c,projectName:r};return e.push(d),localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject(),{toDos:e}},attachToProject:(e,o)=>{t.projectList.forEach((t=>{if(o===t){let t;t.push(e),console.log(t)}})),t.projectList.forEach((o=>{t.createProject.e.push(e),console.log(t.createProject.projectArray)}))},toDos:e,updateTodo:(o,n,c,r,d)=>{let a=e.map((function(e){return e.name})).indexOf(o);e[a].name=n,e[a].date=c,e[a].priority=r,e[a].projectName=d,localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject()}}})(),t=(()=>{const t=JSON.parse(localStorage.getItem("projectList"))||["Personal"],n=()=>{const e=document.getElementById("project");e.innerHTML="",t.forEach((t=>{const o=document.createElement("option");o.setAttribute("value",t),o.classList.add("project-option"),o.textContent=t,e.appendChild(o)}))},c=()=>{const n=document.querySelector(".project-container");n.innerHTML="",t.forEach((c=>{const a=c.replace(/\s+/g,"-").toLowerCase(),s=document.createElement("div");s.className=a,s.className="project-div";const l=document.createElement("h2");l.classList.add("project-name");const i=document.createElement("span");i.classList.add("material-symbols-outlined","edit"),i.textContent="edit",i.addEventListener("click",(()=>{r("Edit Project Name","edit project",c)}));const u=document.createElement("button");u.classList.add("add-todo","project-button");const m=document.createElement("span");m.classList.add("material-symbols-outlined","edit"),m.textContent="add",u.append(m,"Add To Do"),u.addEventListener("click",(()=>{o.showForm("Create New Item","todo")})),l.textContent=c,n.appendChild(s),s.appendChild(l),l.appendChild(i),s.appendChild(u),localStorage.setItem("projectList",JSON.stringify(t)),e.toDos.forEach((e=>{if(e.projectName===c){const t=document.createElement("div");t.classList.add("to-do-item");const o=document.createElement("input");o.setAttribute("type","checkbox");const n=document.createElement("span");n.textContent=e.name;const c=document.createElement("span");c.textContent=e.priority;const r=document.createElement("span");r.textContent=e.date;const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="edit",a.addEventListener("click",(()=>{d("Edit To Do","edit todo",e)})),s.appendChild(t),t.append(o,n,c,r,a)}}))}));const c=document.createElement("button");c.classList.add("project-button");const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="add",c.append(a,"Create New List"),n.appendChild(c),c.addEventListener("click",(()=>{o.showForm("Create New List","project")}))},r=(e,t,n)=>{document.querySelector("#name").value=n,o.showForm(e,t,n)},d=(e,t,n)=>{document.querySelector("#name").value=n.name,document.querySelector("#date").value=n.date,document.querySelector("#priority").value=n.priority,document.querySelector("#project").value=n.projectName,o.showForm(e,t,n.name)};return c(),n(),{createProject:e=>{t.push(e),localStorage.setItem("projectList",JSON.stringify(t)),n(),c()},projectList:t,updateProject:(e,o)=>{console.log(e,o);let r=t.indexOf(e);t[r]=o,localStorage.setItem("projectList",JSON.stringify(t)),c(),n()},displayProject:c}})(),o=(()=>{const o=document.querySelector(".add-todo"),n=document.querySelector("#form-message"),c=document.querySelector(".form-container"),r=document.querySelector(".project-container"),d=document.querySelector(".date"),a=document.querySelector(".priority"),s=document.querySelector(".project-select"),l=document.querySelector(".submit-btn"),i=document.querySelector(".cancel-btn"),u=(d,a,s)=>{o.classList.add("hidden"),r.classList.add("hidden"),n.textContent=d,c.classList.remove("hidden"),l.textContent="Submit",i.textContent="Cancel","todo"===a&&(m(),l.addEventListener("click",(t=>{t.preventDefault(),e.createTodo(document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),y("todo")}),{once:!0})),"edit todo"===a&&(m(),l.textContent="Update",l.addEventListener("click",(t=>{t.preventDefault(),e.updateTodo(s,document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),y()}),{once:!0}),i.textContent="Delete",i.addEventListener("click",(o=>{o.preventDefault();let n=e.toDos.map((function(e){return e.name})).indexOf(s);e.toDos.splice(n,1),localStorage.setItem("toDos",JSON.stringify(e.toDos)),t.displayProject(),y()}),{once:!0})),"project"===a&&(p(),l.addEventListener("click",(e=>{e.preventDefault(),t.createProject(document.querySelector("#name").value),y()}),{once:!0})),"edit project"===a&&(p(),l.textContent="Update",l.addEventListener("click",(e=>{e.preventDefault(),t.updateProject(s,document.querySelector("#name").value),y()}),{once:!0}),i.textContent="Delete",i.addEventListener("click",(e=>{e.preventDefault();let o=t.projectList.map((function(e){return e.name})).indexOf(s);t.projectList.splice(o,1),localStorage.setItem("projectList",JSON.stringify(t.projectList)),t.displayProject(),y()}),{once:!0}))},m=()=>{d.classList.remove("hidden"),a.classList.remove("hidden"),s.classList.remove("hidden")},p=()=>{d.classList.add("hidden"),a.classList.add("hidden"),s.classList.add("hidden")},y=()=>{o.classList.remove("hidden"),n.textContent="",c.classList.add("hidden"),r.classList.remove("hidden"),document.querySelector("#priority").selectedIndex=0,document.querySelector("#project").selectedIndex=0;let e=document.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value=""};return o.addEventListener("click",(()=>{u("Add To-do","todo")})),{showForm:u,hideForm:y}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,