(()=>{"use strict";const e=(()=>{let e=JSON.parse(localStorage.getItem("toDos"))||[];return{createTodo:(o,n,c,r)=>{let d={name:o,date:n,priority:c,projectName:r,id:(new Date).getTime()};return e.push(d),localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject(),{toDos:e}},toDos:e,updateTodo:(o,n,c,r,d)=>{o.name=n,o.date=c,o.priority=r,o.projectName=d,localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject()}}})(),t=(()=>{const t=JSON.parse(localStorage.getItem("projectList"))||["Personal"],n=()=>{const e=document.getElementById("project");e.innerHTML="",t.forEach((t=>{const o=document.createElement("option");o.setAttribute("value",t),o.classList.add("project-option"),o.textContent=t,e.appendChild(o)}))},c=()=>{console.log(t,e.toDos);const n=document.querySelector(".project-container");n.innerHTML="",t.forEach((c=>{const d=document.createElement("div");d.dataset.project=c.replace(/\s+/g,"-").toLowerCase(),d.className="project-div";const a=document.createElement("h2");a.classList.add("project-name");const s=document.createElement("span");s.classList.add("material-symbols-outlined","edit"),s.textContent="edit",s.addEventListener("click",(()=>{r("Edit Project Name","edit project",c)}));const l=document.createElement("button");l.classList.add("add-todo","project-button");const i=document.createElement("span");i.classList.add("material-symbols-outlined","edit"),i.textContent="add",l.append(i,"Add To Do"),l.addEventListener("click",(()=>{o.showForm("Create New Item"),o.newToDo(c)})),a.textContent=c,n.appendChild(d),d.appendChild(a),a.appendChild(s),d.appendChild(l),localStorage.setItem("projectList",JSON.stringify(t)),e.toDos.forEach((e=>{if(e.projectName===c){const t=document.createElement("div");t.classList.add("to-do-item"),t.setAttribute("id",e.id);const n=document.createElement("input");n.setAttribute("type","checkbox");const c=document.createElement("span");c.textContent=e.name;const r=document.createElement("span");r.textContent=e.priority;const a=document.createElement("span");a.textContent=e.date;const s=document.createElement("span");s.classList.add("material-symbols-outlined","edit"),s.textContent="edit",s.addEventListener("click",(()=>{document.querySelector("#name").value=e.name,document.querySelector("#date").value=e.date,document.querySelector("#priority").value=e.priority,document.querySelector("#project").value=e.projectName,o.showForm("Edit To Do"),o.editToDo(e)})),d.appendChild(t),t.append(n,c,r,a,s)}}))}));const c=document.createElement("button");c.classList.add("project-button");const d=document.createElement("span");d.classList.add("material-symbols-outlined","edit"),d.textContent="add",c.append(d,"Create New List"),n.appendChild(c),c.addEventListener("click",(()=>{o.showForm("Create New List","project")}))},r=(e,t,n)=>{document.querySelector("#name").value=n,o.showForm(e,t,n)};return c(),n(),{createProject:e=>{t.push(e),localStorage.setItem("projectList",JSON.stringify(t)),n(),c()},projectList:t,updateProject:(e,o)=>{console.log(e,o);let r=t.indexOf(e);t[r]=o,localStorage.setItem("projectList",JSON.stringify(t)),c(),n()},displayProject:c}})(),o=(()=>{const o=document.querySelector(".add-todo"),n=document.querySelector("#form-message"),c=document.querySelector(".form-container"),r=document.querySelector(".project-container"),d=document.querySelector(".date"),a=document.querySelector(".priority"),s=document.querySelector(".project-select"),l=document.querySelector(".submit-btn"),i=document.querySelector(".cancel-btn"),u=()=>{d.classList.remove("hidden"),a.classList.remove("hidden"),s.classList.remove("hidden")},m=()=>{o.classList.remove("hidden"),n.textContent="",c.classList.add("hidden"),r.classList.remove("hidden"),document.querySelector("#priority").selectedIndex=0,document.querySelector("#project").selectedIndex=0;let e=document.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value=""};return{showForm:e=>{r.classList.add("hidden"),n.textContent=e,c.classList.remove("hidden"),l.textContent="Submit",i.textContent="Cancel"},hideForm:m,newToDo:o=>{u();const n=t.projectList.indexOf(o);document.querySelector("#project").value=t.projectList[n],l.addEventListener("click",(t=>{t.preventDefault(),e.createTodo(document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),m()}),{once:!0})},editToDo:o=>{u(),l.textContent="Update",l.addEventListener("click",(t=>{t.preventDefault(),e.updateTodo(o,document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),m()}),{once:!0}),i.textContent="Delete",i.addEventListener("click",(n=>{n.preventDefault(),e.toDos.splice(e.toDos.indexOf(o),1),localStorage.setItem("toDos",JSON.stringify(e.toDos)),t.displayProject(),m()}),{once:!0})}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,