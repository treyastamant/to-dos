(()=>{"use strict";const e=(()=>{let e=JSON.parse(localStorage.getItem("toDos"))||[];return{createTodo:(t,o,n,c)=>{let d={name:t,date:o,priority:n,projectId:parseInt(c),id:(new Date).getTime()};return e.push(d),localStorage.setItem("toDos",JSON.stringify(e)),{toDos:e}},toDos:e,updateTodo:(t,o,n,c,d)=>{let r=parseInt(d);t.name=o,t.date=n,t.priority=c,t.projectId=r,localStorage.setItem("toDos",JSON.stringify(e))}}})(),t=(()=>{const t=JSON.parse(localStorage.getItem("projectList"))||[{name:"Personal",id:1}],n=()=>{const e=document.getElementById("project");e.innerHTML="",t.forEach((t=>{const o=document.createElement("option");o.value=t.id,o.setAttribute("dataset",t.id),o.classList.add("project-option"),o.textContent=t.name,e.appendChild(o)}))},c=()=>{const n=document.querySelector(".project-container");n.innerHTML="",t.forEach((c=>{const d=document.createElement("div");d.className="project-div";const r=document.createElement("h2");r.classList.add("project-name");const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="edit",a.addEventListener("click",(()=>{o.showForm("Edit Project Name"),o.editProject(c)}),{once:!0});const s=document.createElement("button");s.classList.add("add-todo","project-icon");const l=document.createElement("span");l.classList.add("material-symbols-outlined","edit"),l.textContent="add",s.append(l,"Add To Do"),s.addEventListener("click",(()=>{o.showForm("Create New Item"),o.newToDo(c)}),{once:!0}),r.textContent=c.name,n.appendChild(d),d.appendChild(r),r.appendChild(a),d.appendChild(s),localStorage.setItem("projectList",JSON.stringify(t)),e.toDos.forEach((e=>{if(e.projectId===c.id){const t=document.createElement("div");t.classList.add("to-do-item"),t.setAttribute("id",e.id);const n=document.createElement("input");n.setAttribute("type","checkbox"),n.setAttribute("class","checkbox");const c=document.createElement("span");c.textContent=e.name;const r=document.createElement("span");r.textContent=e.priority;const a=document.createElement("span");a.textContent=e.date;const s=document.createElement("span");s.classList.add("material-symbols-outlined","edit"),s.textContent="edit",s.addEventListener("click",(()=>{o.showForm("Edit To Do"),o.editToDo(e)})),d.appendChild(t),t.append(n,c,r,a,s)}}))}));const c=document.createElement("button");c.classList.add("project-icon");const d=document.createElement("span");d.classList.add("material-symbols-outlined","edit"),d.textContent="add",c.append(d,"Create New List"),n.appendChild(c),c.addEventListener("click",(()=>{o.showForm("Create New List"),o.newProject()}))};return c(),n(),{createProject:e=>{const o={name:e,id:(new Date).getTime()};t.push(o),localStorage.setItem("projectList",JSON.stringify(t)),n()},projectList:t,updateProject:(e,o)=>{e.name=o,localStorage.setItem("projectList",JSON.stringify(t)),n()},displayProject:c}})(),o=(()=>{const o=document.querySelector(".add-todo"),n=document.querySelector("#form-message"),c=document.querySelector(".form-container"),d=document.querySelector(".project-container"),r=document.querySelector(".date"),a=document.querySelector(".priority"),s=document.querySelector(".project-select"),l=document.querySelector(".buttons"),i=()=>{o.classList.remove("hidden"),n.textContent="",c.classList.add("hidden"),d.classList.remove("hidden"),t.displayProject()},u=()=>{r.classList.remove("hidden"),a.classList.remove("hidden"),s.classList.remove("hidden")},m=()=>{r.classList.add("hidden"),a.classList.add("hidden"),s.classList.add("hidden")};return{showForm:e=>{l.innerHTML="",document.querySelector("#name").classList.remove("required"),document.querySelector("#priority").selectedIndex=0,document.querySelector("#project").selectedIndex=0;let t=document.querySelectorAll("input");for(let e=0;e<t.length;e++)t[e].value="";d.classList.add("hidden"),n.textContent=e,c.classList.remove("hidden")},hideForm:i,newToDo:t=>{u(),document.querySelector("#project").value=t.id;const o=document.createElement("button");o.textContent="Submit",o.addEventListener("click",(t=>{t.preventDefault(),document.querySelector("#name").value?(e.createTodo(document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),i()):document.querySelector("#name").classList.add("required")})),l.appendChild(o);const n=document.createElement("button");n.textContent="Cancel",n.addEventListener("click",(e=>{e.preventDefault(),i()})),l.appendChild(n)},editToDo:t=>{u(),document.querySelector("#name").value=t.name,document.querySelector("#date").value=t.date,document.querySelector("#priority").value=t.priority,document.querySelector("#project").value=t.projectId;const o=document.createElement("button");o.textContent="Update",o.addEventListener("click",(o=>{o.preventDefault(),e.updateTodo(t,document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),i()})),l.appendChild(o);const n=document.createElement("button");n.textContent="Delete",n.addEventListener("click",(o=>{o.preventDefault(),e.toDos.splice(e.toDos.indexOf(t),1),localStorage.setItem("toDos",JSON.stringify(e.toDos)),i()})),l.appendChild(n)},newProject:()=>{m();const e=document.createElement("button");e.textContent="Submit",e.addEventListener("click",(e=>{e.preventDefault(),document.querySelector("#name").value?(t.createProject(document.querySelector("#name").value),i()):document.querySelector("#name").classList.add("required")})),l.appendChild(e);const o=document.createElement("button");o.textContent="Cancel",o.addEventListener("click",(e=>{e.preventDefault(),i()})),l.appendChild(o)},editProject:e=>{m(),document.querySelector("#name").value=e.name;const o=document.createElement("button");o.textContent="Update",o.addEventListener("click",(o=>{o.preventDefault(),t.updateProject(e,document.querySelector("#name").value),i()})),l.appendChild(o);const n=document.createElement("button");n.textContent="Delete",n.addEventListener("click",(o=>{o.preventDefault(),t.projectList.splice(t.projectList.indexOf(e),1),localStorage.setItem("projectList",JSON.stringify(t.projectList)),i()})),l.appendChild(n)}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,