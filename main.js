(()=>{"use strict";const e=(()=>{let e=[];return{createTodo:(o,c,d,r)=>{let n={name:o,date:c,priority:d,projectName:r};return e.push(n),t.displayProject(),{toDos:e}},attachToProject:(e,o)=>{t.projectList.forEach((t=>{if(o===t){let t;t.push(e),console.log(t)}})),t.projectList.forEach((o=>{t.createProject.e.push(e),console.log(t.createProject.projectArray)}))},toDos:e}})(),t=(()=>{const t=JSON.parse(localStorage.getItem("projectList"))||["Personal"],c=()=>{const e=document.getElementById("project");e.innerHTML="",t.forEach((t=>{const o=document.createElement("option");o.setAttribute("value",t),o.classList.add("project-option"),o.textContent=t,e.appendChild(o)}))},d=()=>{const o=document.querySelector(".project-container");o.innerHTML="",t.forEach((t=>{const c=t.replace(/\s+/g,"-").toLowerCase(),d=document.createElement("div");d.className=c;const n=document.createElement("h2");n.classList.add("project-name");const s=document.createElement("span");s.classList.add("material-symbols-rounded","edit"),s.textContent="edit",s.addEventListener("click",(()=>{r("Edit Project Name","edit project",t)})),n.textContent=t,o.appendChild(d),d.appendChild(n),n.appendChild(s),e.toDos.forEach((e=>{if(e.projectName===t){const t=document.createElement("p");t.textContent=e.name,d.appendChild(t)}}))}))},r=(e,t,c)=>{document.querySelector("#name").value=c,o.showForm(e,t,c)};return d(),c(),{createProject:e=>{t.push(e),localStorage.setItem("projectList",JSON.stringify(t)),c(),d()},projectList:t,updateProject:(e,o)=>{console.log(e,o);let r=t.indexOf(e);t[r]=o,localStorage.setItem("projectList",JSON.stringify(t)),d(),c()},displayProject:d}})(),o=(()=>{const o=document.querySelector(".add-todo"),c=document.querySelector(".add-project"),d=document.querySelector("#form-message"),r=document.querySelector(".form-container"),n=document.querySelector(".project-container"),s=document.querySelector(".date"),a=document.querySelector(".priority"),l=document.querySelector(".project-select"),i=document.querySelector(".submit-btn"),u=(u,p,h)=>{o.classList.add("hidden"),c.classList.add("hidden"),n.classList.add("hidden"),d.textContent=u,r.classList.remove("hidden"),"todo"===p&&(s.classList.remove("hidden"),a.classList.remove("hidden"),l.classList.remove("hidden"),i.textContent="Add New Todo",i.addEventListener("click",(t=>{t.preventDefault(),e.createTodo(document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),m("todo")}),{once:!0})),"project"===p&&(s.classList.add("hidden"),a.classList.add("hidden"),l.classList.add("hidden"),i.textContent="Add New Project",i.addEventListener("click",(e=>{e.preventDefault(),t.createProject(document.querySelector("#name").value),m()}),{once:!0})),"edit project"===p&&(s.classList.add("hidden"),a.classList.add("hidden"),l.classList.add("hidden"),i.textContent="Update",i.addEventListener("click",(e=>{e.preventDefault(),t.updateProject(h,document.querySelector("#name").value),m()}),{once:!0}))},m=()=>{o.classList.remove("hidden"),c.classList.remove("hidden"),d.textContent="",r.classList.add("hidden"),n.classList.remove("hidden"),document.querySelector("#priority").selectedIndex=0,document.querySelector("#project").selectedIndex=0;let e=document.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value=""};return o.addEventListener("click",(()=>{u("Add To-do","todo")})),c.addEventListener("click",(()=>{u("Create Project","project")})),{showForm:u,hideForm:m}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,