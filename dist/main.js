(()=>{"use strict";const e=(()=>{let e=JSON.parse(localStorage.getItem("toDos"))||[];return{createTodo:(o,n,c,r)=>{let d={name:o,date:n,priority:c,projectName:r};return e.push(d),localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject(),{toDos:e}},attachToProject:(e,o)=>{t.projectList.forEach((t=>{if(o===t){let t;t.push(e),console.log(t)}})),t.projectList.forEach((o=>{t.createProject.e.push(e),console.log(t.createProject.projectArray)}))},toDos:e,updateTodoName:(o,n)=>{let c=e.map((function(e){return e.name})).indexOf(o);e[c].name=n,localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject()},updateTodoDate:(o,n)=>{let c=e.map((function(e){return e.name})).indexOf(o);e[c].date=n,localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject()}}})(),t=(()=>{const t=JSON.parse(localStorage.getItem("projectList"))||["Personal"],n=()=>{const e=document.getElementById("project");e.innerHTML="",t.forEach((t=>{const o=document.createElement("option");o.setAttribute("value",t),o.classList.add("project-option"),o.textContent=t,e.appendChild(o)}))},c=()=>{const n=document.querySelector(".project-container");n.innerHTML="",t.forEach((t=>{const o=t.replace(/\s+/g,"-").toLowerCase(),c=document.createElement("div");c.className=o;const a=document.createElement("h2");a.classList.add("project-name");const s=document.createElement("span");s.classList.add("material-symbols-outlined","edit"),s.textContent="edit",s.addEventListener("click",(()=>{r("Edit Project Name","edit project",t)})),a.textContent=t,n.appendChild(c),c.appendChild(a),a.appendChild(s),e.toDos.forEach((e=>{if(e.projectName===t){const t=document.createElement("div");t.classList.add("to-do-item");const o=document.createElement("span");o.textContent=e.name;const n=document.createElement("span");n.textContent=e.priority;const r=document.createElement("span");r.textContent=e.date;const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="edit",a.addEventListener("click",(()=>{d("Edit To Do","edit todo",e)})),c.appendChild(t),t.append(o,n,r,a)}}))}));const c=document.createElement("button");c.classList.add("project-button");const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="add",c.append(a,"Create New List"),n.appendChild(c),c.addEventListener("click",(()=>{o.showForm("Create New List","project")}))},r=(e,t,n)=>{document.querySelector("#name").value=n,o.showForm(e,t,n)},d=(e,t,n)=>{document.querySelector("#name").value=n.name,document.querySelector("#date").value=n.date,document.querySelector("#priority").value=n.priority,document.querySelector("#project").value=n.project,o.showForm(e,t,n.name)};return c(),n(),{createProject:e=>{t.push(e),localStorage.setItem("projectList",JSON.stringify(t)),n(),c()},projectList:t,updateProject:(e,o)=>{console.log(e,o);let r=t.indexOf(e);t[r]=o,localStorage.setItem("projectList",JSON.stringify(t)),c(),n()},displayProject:c}})(),o=(()=>{const o=document.querySelector(".add-todo"),n=document.querySelector("#form-message"),c=document.querySelector(".form-container"),r=document.querySelector(".project-container"),d=document.querySelector(".date"),a=document.querySelector(".priority"),s=document.querySelector(".project-select"),l=document.querySelector(".submit-btn"),i=(d,a,s)=>{o.classList.add("hidden"),r.classList.add("hidden"),n.textContent=d,c.classList.remove("hidden"),l.textContent="Submit","todo"===a&&(u(),l.addEventListener("click",(t=>{t.preventDefault(),e.createTodo(document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),p("todo")}),{once:!0})),"edit todo"===a&&(u(),l.textContent="Update",l.addEventListener("click",(t=>{t.preventDefault(),e.updateTodoName(s,document.querySelector("#name").value),e.updateTodoDate(s,document.querySelector("#date").value),p()}),{once:!0})),"project"===a&&(m(),l.addEventListener("click",(e=>{e.preventDefault(),t.createProject(document.querySelector("#name").value),p()}),{once:!0})),"edit project"===a&&(m(),l.textContent="Update",l.addEventListener("click",(e=>{e.preventDefault(),t.updateProject(s,document.querySelector("#name").value),p()}),{once:!0}))},u=()=>{d.classList.remove("hidden"),a.classList.remove("hidden"),s.classList.remove("hidden")},m=()=>{d.classList.add("hidden"),a.classList.add("hidden"),s.classList.add("hidden")},p=()=>{o.classList.remove("hidden"),n.textContent="",c.classList.add("hidden"),r.classList.remove("hidden"),document.querySelector("#priority").selectedIndex=0,document.querySelector("#project").selectedIndex=0;let e=document.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value=""};return o.addEventListener("click",(()=>{i("Add To-do","todo")})),{showForm:i,hideForm:p}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,