(()=>{"use strict";const e=(()=>{let e=JSON.parse(localStorage.getItem("toDos"))||[];return{createTodo:(o,c,n,r)=>{let d={name:o,date:c,priority:n,projectName:r};return e.push(d),localStorage.setItem("toDos",JSON.stringify(e)),t.displayProject(),{toDos:e}},attachToProject:(e,o)=>{t.projectList.forEach((t=>{if(o===t){let t;t.push(e),console.log(t)}})),t.projectList.forEach((o=>{t.createProject.e.push(e),console.log(t.createProject.projectArray)}))},toDos:e,updateTodoName:(t,o)=>{console.log(t,o);let c=e.indexOf(t);e[c].name=o,localStorage.setItem("toDos",JSON.stringify(e)),displayProject()}}})(),t=(()=>{const t=JSON.parse(localStorage.getItem("projectList"))||["Personal"],c=()=>{const e=document.getElementById("project");e.innerHTML="",t.forEach((t=>{const o=document.createElement("option");o.setAttribute("value",t),o.classList.add("project-option"),o.textContent=t,e.appendChild(o)}))},n=()=>{const c=document.querySelector(".project-container");c.innerHTML="",t.forEach((t=>{const o=t.replace(/\s+/g,"-").toLowerCase(),n=document.createElement("div");n.className=o;const a=document.createElement("h2");a.classList.add("project-name");const s=document.createElement("span");s.classList.add("material-symbols-outlined","edit"),s.textContent="edit",s.addEventListener("click",(()=>{r("Edit Project Name","edit project",t)})),a.textContent=t,c.appendChild(n),n.appendChild(a),a.appendChild(s),e.toDos.forEach((e=>{if(e.projectName===t){const t=document.createElement("div");t.classList.add("to-do-item");const o=document.createElement("span");o.textContent=e.name;const c=document.createElement("span");c.textContent=e.priority;const r=document.createElement("span");r.textContent=e.date;const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="edit",a.addEventListener("click",(()=>{d("Edit To Do","edit todo",e)})),n.appendChild(t),t.append(o,c,r,a)}}))}));const n=document.createElement("button");n.classList.add("project-button");const a=document.createElement("span");a.classList.add("material-symbols-outlined","edit"),a.textContent="add",n.append(a,"Create New List"),c.appendChild(n),n.addEventListener("click",(()=>{o.showForm("Create New List","project")}))},r=(e,t,c)=>{document.querySelector("#name").value=c,o.showForm(e,t,c)},d=(e,t,c)=>{document.querySelector("#name").value=c.name,document.querySelector("#date").value=c.date,document.querySelector("#priority").value=c.priority,document.querySelector("#project").value=c.project,o.showForm(e,t,c.name)};return n(),c(),{createProject:e=>{t.push(e),localStorage.setItem("projectList",JSON.stringify(t)),c(),n()},projectList:t,updateProject:(e,o)=>{console.log(e,o);let r=t.indexOf(e);t[r]=o,localStorage.setItem("projectList",JSON.stringify(t)),n(),c()},displayProject:n}})(),o=(()=>{const o=document.querySelector(".add-todo"),c=(document.querySelector(".add-project"),document.querySelector("#form-message")),n=document.querySelector(".form-container"),r=document.querySelector(".project-container"),d=document.querySelector(".date"),a=document.querySelector(".priority"),s=document.querySelector(".project-select"),l=document.querySelector(".submit-btn"),i=(d,a,s)=>{o.classList.add("hidden"),r.classList.add("hidden"),c.textContent=d,n.classList.remove("hidden"),"todo"===a&&(u(),l.textContent="Add New Todo",l.addEventListener("click",(t=>{t.preventDefault(),e.createTodo(document.querySelector("#name").value,document.querySelector("#date").value,document.querySelector("#priority").value,document.querySelector("#project").value),p("todo")}),{once:!0})),"project"===a&&(m(),l.textContent="Submit",l.addEventListener("click",(e=>{e.preventDefault(),t.createProject(document.querySelector("#name").value),p()}),{once:!0})),"edit project"===a&&(m(),l.textContent="Update",l.addEventListener("click",(e=>{e.preventDefault(),t.updateProject(s,document.querySelector("#name").value),p()}),{once:!0})),"edit todo"===a&&(u(),l.textContent="Update",l.addEventListener("click",(e=>{e.preventDefault(),t.updateProject(s,document.querySelector("#name").value),p()}),{once:!0}))},u=()=>{d.classList.remove("hidden"),a.classList.remove("hidden"),s.classList.remove("hidden")},m=()=>{d.classList.add("hidden"),a.classList.add("hidden"),s.classList.add("hidden")},p=()=>{o.classList.remove("hidden"),c.textContent="",n.classList.add("hidden"),r.classList.remove("hidden"),document.querySelector("#priority").selectedIndex=0,document.querySelector("#project").selectedIndex=0;let e=document.querySelectorAll("input");for(let t=0;t<e.length;t++)e[t].value=""};return o.addEventListener("click",(()=>{i("Add To-do","todo")})),{showForm:i,hideForm:p}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,